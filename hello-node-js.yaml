apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-hello-node-js
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front-hello-node-js
  template:
    metadata:
      labels:
        app: front-hello-node-js
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: front-hello-node-js
        image: sunny5/front-hello-node-js:latest
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        ports:
        - containerPort: 85
---
apiVersion: v1
kind: Service
metadata:
  name: front-hello-node-js
spec:
  # loadBalancerIP: 52.141.36.186
  # type: LoadBalancer
  ports:  
  - port: 80
  selector:
    app: front-hello-node-js
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-node-js
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello-node-js
  template:
    metadata:
      labels:
        app: hello-node-js
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: hello-node-js
        image: sunny5/hello-node-js:latest
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: hello-node-js
spec: 
  # loadBalancerIP: 20.194.34.199
  # type: LoadBalancer
  ports:    
  - port: 80
  selector:
    app: hello-node-js
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis1
  template:
    metadata:
      labels:
        app: redis1
    spec:
      containers:
      - name: redis1
        image: redis
        resources:  
          requests:
            cpu: 100m  
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        ports:
        - containerPort: 6379
--- 
apiVersion: v1
kind: Service
metadata:
  name: redis1
spec: 
  ports:    
  - port: 6379
  selector:
    app: redis1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-mysql
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: default
  resources:
    requests:
      storage: 5Gi
---  
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql  
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:latest
        resources:  
          requests:
            cpu: 1000m  
            memory: 1280Mi
          limits:
            cpu: 2500m
            memory: 2560Mi
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:  
              name: mysql-root-password
              key: password
        args: ["--default-authentication-plugin=mysql_native_password"]
        ports:  
        - containerPort: 3306
        volumeMounts: 
        - mountPath: /var/lib/mysql
          name: data-mysql
      volumes:
      - name: data-mysql
        persistentVolumeClaim:
          claimName: data-mysql
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:   
  ports:       
  - port: 3306
  selector:
    app: mysql          
  
